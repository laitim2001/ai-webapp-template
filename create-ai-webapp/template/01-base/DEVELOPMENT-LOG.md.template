# 🔄 {{PROJECT_NAME}} - 開發記錄

> **目的**: 記錄開發過程中的重要討論、決策和問題解決方案
> **維護**: 每次重要開發會話後更新
> **重要**: ⚠️ **新的記錄必須添加在文件最頂部** - 保持時間倒序排列（最新在上）
> **格式**: `## 🔧 YYYY-MM-DD (HH:MM): 會話標題 ✅/🔄/❌`

## 📋 快速導航

- [示例開發記錄 ({{CURRENT_DATE}})](#示例開發記錄)

---

## 示例開發記錄

### 🎉 {{CURRENT_DATE}}: 項目初始化完成 ✅

#### 📊 **會話概覽**
**時間**: {{CURRENT_DATE}}
**狀態**: ✅ 完成
**類型**: 項目設置
**核心成果**: 成功使用 AI Web App Template 初始化項目

#### 🎯 **完成內容**

**初始化步驟**:
1. ✅ 運行 `node init-project.js`
2. ✅ 配置項目基本信息
3. ✅ 選擇數據庫類型：{{DATABASE_TYPE}}
4. ✅ 選擇功能模組：(列出選擇的模組)
5. ✅ 配置環境變數
6. ✅ 初始化數據庫
7. ✅ 安裝依賴

**生成的項目結構**:
```
{{PROJECT_NAME}}/
├── app/                 # Next.js App Router
├── components/          # React 組件
├── lib/                # 工具庫
├── prisma/             # 數據庫 Schema
├── public/             # 靜態資源
└── ...
```

#### 📚 **關鍵決策**

1. **數據庫選擇**: 選擇 {{DATABASE_TYPE}}
   - **原因**: (記錄選擇原因)
   - **影響**: (記錄對項目的影響)

2. **模組選擇**: (列出選擇的模組)
   - **原因**: (記錄為什麼選擇這些模組)

#### ✅ **測試驗證**

```bash
# 啟動開發服務器
npm run dev

# 訪問 http://localhost:3000
# ✅ 應用成功運行
```

#### 📈 **下一步計劃**

- [ ] 配置部署環境
- [ ] 開始實現核心功能
- [ ] 設置 CI/CD 流程

---

## 🔧 開發記錄模板

複製以下模板來記錄新的開發會話：

```markdown
## 🔧 YYYY-MM-DD (HH:MM): 會話標題 ✅/🔄/❌

### 📊 **會話概覽**
**時間**: YYYY-MM-DD (HH:MM-HH:MM)
**狀態**: ✅ 完成 / 🔄 進行中 / ❌ 失敗
**類型**: 功能開發 / Bug修復 / 重構 / 優化 / 文檔
**核心成果**: (簡短描述主要成果)

### 🎯 **目標/問題**

**背景**:
- (描述為什麼要做這件事)

**具體需求**:
1. (需求1)
2. (需求2)

### 🔍 **問題分析** (如果是Bug修復)

**症狀**:
- (描述問題現象)

**根本原因**:
- (描述問題的根本原因)

**影響範圍**:
- (描述影響了哪些功能)

### 🚀 **實施方案**

**修改的文件**:
1. `path/to/file1.ts` - (簡述修改內容)
2. `path/to/file2.tsx` - (簡述修改內容)

**關鍵代碼變更**:
```typescript
// 修改前
const oldCode = ...;

// 修改後
const newCode = ...;
```

**新增的文件** (如果有):
- `path/to/new-file.ts` - (描述文件用途)

### 📚 **關鍵決策**

1. **決策1**: (描述決策)
   - **選項**: (列出考慮的選項)
   - **選擇**: (說明選擇的方案)
   - **原因**: (解釋為什麼選擇這個方案)

2. **決策2**: (如果有)

### ✅ **測試驗證**

**測試步驟**:
1. (測試步驟1)
2. (測試步驟2)

**測試結果**:
- ✅ (通過的測試)
- ❌ (失敗的測試，如果有)

### 📈 **成效統計** (如適用)

**性能提升**:
- 響應時間: XXms → YYms (-Z%)
- 代碼覆蓋率: XX% → YY%

**功能完成度**:
- 已完成: X/Y 項

### 📚 **經驗教訓**

**做得好的地方**:
- (記錄成功的經驗)

**需要改進的地方**:
- (記錄可以改進的地方)

**技術知識**:
- (記錄學到的新知識或技巧)

### 🔗 **相關鏈接**

- PR: #XXX
- Issue: #YYY
- 文檔: (相關文檔鏈接)

### 📝 **備註**

(任何其他重要信息)

---
```

## 📖 使用指南

### 何時記錄

建議在以下情況記錄開發過程：

1. **重要功能開發** - 實現新的核心功能
2. **Bug修復** - 修復重要或複雜的Bug
3. **架構決策** - 做出重要的技術決策
4. **性能優化** - 進行顯著的性能優化
5. **重構** - 進行大規模代碼重構
6. **問題解決** - 解決困難的技術問題

### 記錄原則

1. **及時記錄** - 開發完成後立即記錄，避免遺忘細節
2. **簡潔明了** - 重點記錄關鍵信息，避免冗長
3. **結構化** - 使用統一的格式，便於查找
4. **時間倒序** - 最新的記錄放在最上面
5. **連結相關** - 記錄相關的 PR、Issue 和文檔

### 狀態標記

使用 emoji 標記會話狀態：

- ✅ **完成** - 任務已完成並驗證
- 🔄 **進行中** - 任務正在進行
- ❌ **失敗/取消** - 任務失敗或被取消
- ⚠️ **有問題** - 完成但存在已知問題
- 🎉 **重大成就** - 重要的里程碑

### 類型分類

使用以下類型標記開發活動：

- 🔧 **功能開發** - 實現新功能
- 🐛 **Bug修復** - 修復缺陷
- 🔄 **重構** - 代碼重構
- ⚡ **性能優化** - 性能改進
- 📝 **文檔** - 文檔更新
- 🧪 **測試** - 測試相關
- 🎨 **UI/UX** - 界面和體驗改進
- 🔒 **安全** - 安全相關改進
- 🚀 **部署** - 部署和發布

## 📊 統計和分析

### 開發活動統計

定期分析開發記錄可以了解：

- 主要開發類型分布
- 常見問題和解決模式
- 開發效率趨勢
- 技術債務累積情況

### 知識庫建設

開發記錄可以作為：

- 團隊知識庫
- 新成員培訓材料
- 技術決策參考
- 問題排查手冊

---

**📝 提示**: 保持開發記錄的習慣可以幫助團隊積累知識、快速定位問題、分享最佳實踐。
