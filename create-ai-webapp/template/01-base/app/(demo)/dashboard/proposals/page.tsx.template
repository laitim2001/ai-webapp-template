'use client';

import { useEffect, useState } from 'react';
import Link from 'next/link';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Progress } from '@/components/ui/progress';
import { DemoBanner } from '@/components/demo-banner';
import { ArrowLeft, Plus, FileText, Calendar, DollarSign, User } from 'lucide-react';
import { demoGetProposals } from '@/lib/demo-api';

export default function ProposalsPage() {
  const [proposals, setProposals] = useState<any[]>([]);
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await demoGetProposals();
        if (response.success && response.data) {
          setProposals(response.data.proposals || []);
        }
      } catch (error) {
        console.error('Failed to fetch proposals:', error);
      } finally {
        setIsLoading(false);
      }
    };

    fetchData();
  }, []);

  const getStatusBadge = (status: string) => {
    const variants: any = {
      'draft': 'outline',
      'in-review': 'secondary',
      'approved': 'default',
      'rejected': 'destructive'
    };
    const labels: any = {
      'draft': '草稿',
      'in-review': '審核中',
      'approved': '已批准',
      'rejected': '已拒絕'
    };
    return <Badge variant={variants[status]}>{labels[status]}</Badge>;
  };

  return (
    <div className="min-h-screen bg-gray-50 dark:bg-gray-900">
      <header className="sticky top-0 z-10 border-b bg-white dark:bg-gray-800">
        <div className="flex h-16 items-center justify-between px-6">
          <div className="flex items-center gap-4">
            <Button variant="ghost" size="icon" asChild>
              <Link href="/(demo)/dashboard"><ArrowLeft className="h-5 w-5" /></Link>
            </Button>
            <h1 className="text-xl font-bold">提案管理</h1>
          </div>
          <Button><Plus className="mr-2 h-4 w-4" />新增提案</Button>
        </div>
      </header>

      <main className="p-6">
        <DemoBanner />
        <div className="space-y-4">
          {proposals.map((proposal) => (
            <Card key={proposal.id} className="hover:shadow-md transition-shadow">
              <CardHeader>
                <div className="flex items-start justify-between">
                  <div className="flex-1">
                    <div className="flex items-center gap-2 mb-2">
                      <FileText className="h-5 w-5 text-primary" />
                      <CardTitle className="text-lg">{proposal.title}</CardTitle>
                    </div>
                    <div className="flex items-center gap-2">
                      {getStatusBadge(proposal.status)}
                      <span className="text-sm text-muted-foreground">{proposal.customer}</span>
                    </div>
                  </div>
                  <div className="text-right">
                    <div className="text-2xl font-bold text-primary">
                      NT$ {proposal.value.toLocaleString()}
                    </div>
                    <div className="text-xs text-muted-foreground">提案金額</div>
                  </div>
                </div>
              </CardHeader>

              <CardContent className="space-y-4">
                <div>
                  <div className="flex justify-between text-sm mb-1">
                    <span className="text-muted-foreground">完成進度</span>
                    <span className="font-medium">{proposal.progress}%</span>
                  </div>
                  <Progress value={proposal.progress} />
                </div>

                <div className="grid grid-cols-2 gap-4 text-sm">
                  <div className="flex items-center gap-2 text-muted-foreground">
                    <User className="h-4 w-4" />
                    <span>創建者: {proposal.createdBy}</span>
                  </div>
                  <div className="flex items-center gap-2 text-muted-foreground">
                    <Calendar className="h-4 w-4" />
                    <span>截止: {proposal.dueDate}</span>
                  </div>
                </div>

                <div className="pt-4 border-t">
                  <div className="text-sm text-muted-foreground mb-2">包含章節:</div>
                  <div className="flex flex-wrap gap-2">
                    {proposal.sections.map((section: string, index: number) => (
                      <Badge key={index} variant="outline">{section}</Badge>
                    ))}
                  </div>
                </div>

                <div className="flex gap-2 pt-2">
                  <Button variant="outline" className="flex-1">編輯</Button>
                  <Button variant="outline" className="flex-1">預覽</Button>
                  <Button className="flex-1">生成PDF</Button>
                </div>
              </CardContent>
            </Card>
          ))}
        </div>
      </main>
    </div>
  );
}
