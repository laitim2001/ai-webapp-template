'use client';

import { useState } from 'react';
import Link from 'next/link';
import { Card, CardContent } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Badge } from '@/components/ui/badge';
import { DemoBanner } from '@/components/demo-banner';
import { Search, ArrowLeft, FileText, ExternalLink } from 'lucide-react';
import { demoSearch } from '@/lib/demo-api';

export default function SearchPage() {
  const [query, setQuery] = useState('');
  const [results, setResults] = useState<any[]>([]);
  const [isSearching, setIsSearching] = useState(false);

  const handleSearch = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!query.trim()) return;

    setIsSearching(true);
    try {
      const response = await demoSearch(query);
      if (response.success && response.data) {
        setResults(response.data.results || []);
      }
    } catch (error) {
      console.error('Search failed:', error);
    } finally {
      setIsSearching(false);
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 dark:bg-gray-900">
      <header className="sticky top-0 z-10 border-b bg-white dark:bg-gray-800">
        <div className="flex h-16 items-center gap-4 px-6">
          <Button variant="ghost" size="icon" asChild>
            <Link href="/(demo)/dashboard"><ArrowLeft className="h-5 w-5" /></Link>
          </Button>
          <h1 className="text-xl font-bold">搜索</h1>
        </div>
      </header>

      <main className="p-6">
        <DemoBanner />
        <form onSubmit={handleSearch} className="mb-6">
          <div className="relative">
            <Search className="absolute left-3 top-3 h-4 w-4 text-muted-foreground" />
            <Input
              placeholder="搜索文檔、用戶、項目..."
              value={query}
              onChange={(e) => setQuery(e.target.value)}
              className="pl-10"
            />
          </div>
        </form>

        {results.length > 0 && (
          <div className="space-y-4">
            {results.map((result) => (
              <Card key={result.id} className="hover:shadow-md">
                <CardContent className="pt-6">
                  <div className="flex items-start justify-between">
                    <div className="flex-1">
                      <div className="flex items-center gap-2 mb-2">
                        <FileText className="h-4 w-4" />
                        <h3 className="font-semibold">{result.title}</h3>
                        <Badge variant="outline">{result.type}</Badge>
                      </div>
                      <p className="text-sm text-muted-foreground mb-2">{result.snippet}</p>
                      <div className="flex items-center gap-2 text-xs text-muted-foreground">
                        <span>來源: {result.source}</span>
                        <span>•</span>
                        <span>相關度: {(result.score * 100).toFixed(0)}%</span>
                      </div>
                    </div>
                    <Button variant="ghost" size="icon">
                      <ExternalLink className="h-4 w-4" />
                    </Button>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        )}
      </main>
    </div>
  );
}
