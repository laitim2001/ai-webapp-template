/**
 * ================================================================
 * {{PROJECT_NAME}} - Switch Component
 * ================================================================
 *
 * Toggle switch component built on Radix UI.
 * Provides accessible on/off toggle with smooth animations.
 *
 * @component
 * @example
 * ```tsx
 * // Basic switch
 * <div className="flex items-center space-x-2">
 *   <Switch id="airplane-mode" />
 *   <Label htmlFor="airplane-mode">Airplane Mode</Label>
 * </div>
 *
 * // Controlled switch
 * <Switch
 *   checked={isEnabled}
 *   onCheckedChange={setIsEnabled}
 * />
 *
 * // Disabled switch
 * <Switch disabled />
 *
 * // Settings form
 * <div className="space-y-4">
 *   <div className="flex items-center justify-between">
 *     <Label htmlFor="notifications">Notifications</Label>
 *     <Switch
 *       id="notifications"
 *       checked={settings.notifications}
 *       onCheckedChange={(checked) =>
 *         setSettings(prev => ({ ...prev, notifications: checked }))
 *       }
 *     />
 *   </div>
 * </div>
 * ```
 */

"use client"

import * as React from "react"
import * as SwitchPrimitives from "@radix-ui/react-switch"

import { cn } from "@/lib/utils"

const Switch = React.forwardRef<
  React.ElementRef<typeof SwitchPrimitives.Root>,
  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>
>(({ className, ...props }, ref) => (
  <SwitchPrimitives.Root
    className={cn(
      "peer inline-flex h-[24px] w-[44px] shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input",
      className
    )}
    {...props}
    ref={ref}
  >
    <SwitchPrimitives.Thumb
      className={cn(
        "pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0"
      )}
    />
  </SwitchPrimitives.Root>
))
Switch.displayName = SwitchPrimitives.Root.displayName

export { Switch }

