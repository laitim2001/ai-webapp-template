/**
 * ================================================================
 * {{PROJECT_NAME}} - Avatar Component
 * ================================================================
 *
 * User avatar component built on Radix UI.
 * Supports image loading, fallback display, and automatic initials generation.
 *
 * @component
 * @example
 * ```tsx
 * // Basic user avatar
 * <Avatar>
 *   <AvatarImage src="/avatars/john-doe.jpg" alt="John Doe" />
 *   <AvatarFallback>JD</AvatarFallback>
 * </Avatar>
 *
 * // Custom size
 * <Avatar className="h-16 w-16">
 *   <AvatarImage src={user.avatar} alt={user.name} />
 *   <AvatarFallback className="text-lg">
 *     {user.name.charAt(0)}
 *   </AvatarFallback>
 * </Avatar>
 *
 * // Team member list
 * <div className="flex -space-x-2">
 *   {teamMembers.map((member) => (
 *     <Avatar key={member.id} className="border-2 border-white">
 *       <AvatarImage src={member.avatar} alt={member.name} />
 *       <AvatarFallback>{member.initials}</AvatarFallback>
 *     </Avatar>
 *   ))}
 * </div>
 *
 * // With online status
 * <div className="relative">
 *   <Avatar>
 *     <AvatarImage src={user.avatar} alt={user.name} />
 *     <AvatarFallback>{user.initials}</AvatarFallback>
 *   </Avatar>
 *   <div className="absolute bottom-0 right-0 h-3 w-3 bg-green-400 rounded-full border-2 border-white" />
 * </div>
 * ```
 */

import * as React from "react"
import * as AvatarPrimitive from "@radix-ui/react-avatar"

import { cn } from "@/lib/utils"

const Avatar = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Root
    ref={ref}
    className={cn(
      "relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full",
      className
    )}
    {...props}
  />
))
Avatar.displayName = AvatarPrimitive.Root.displayName

const AvatarImage = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Image>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Image
    ref={ref}
    className={cn("aspect-square h-full w-full", className)}
    {...props}
  />
))
AvatarImage.displayName = AvatarPrimitive.Image.displayName

const AvatarFallback = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Fallback>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Fallback
    ref={ref}
    className={cn(
      "flex h-full w-full items-center justify-center rounded-full bg-muted",
      className
    )}
    {...props}
  />
))
AvatarFallback.displayName = AvatarPrimitive.Fallback.displayName

export { Avatar, AvatarImage, AvatarFallback }

